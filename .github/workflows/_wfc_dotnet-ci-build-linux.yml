name: dotnet-build-linux

on:
  workflow_call:
    inputs:
      solutionName:
        required: true
        type: string
      isPrimaryBuildOs:
        required: false
        type: boolean
        default: true
        description: 'If true, this OS will upload release artifacts (nuget packages, SBOM, etc.)'
    secrets:
      SONAR_TOKEN:
        required: false
      SONAR_PROJECT_KEY:
        required: false
      SONAR_ORGANISATION_KEY:
        required: false
      VIRUSTOTAL_API_KEY:
        required: false
      CODECOV_TOKEN:
        required: false
    outputs:
      nbgv:
        description: 'NBGV SemVer2 version'
        value: ${{ jobs.build.outputs.nbgv }}
      change_commit_log:
        description: 'Change commit log'
        value: ${{ jobs.build.outputs.change_commit_log }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      nbgv: ${{ steps.nbgv.outputs.SemVer2 }}
      change_commit_log: ${{ steps.changelog.outputs.commitLog }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      solutionpath: ${{ inputs.solutionName }}.sln
      unittestprojectpath: ${{ inputs.solutionName }}.UnitTests/${{ inputs.solutionName }}.UnitTests.csproj
      inttestprojectpath: ${{ inputs.solutionName }}.IntegrationTests/${{ inputs.solutionName }}.IntegrationTests.csproj
      benchmarkprojectpath: ${{ inputs.solutionName }}.Benchmarks/${{ inputs.solutionName }}.Benchmarks.csproj
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - name: Setup Java 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install .NET
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: "./global.json"
      - name: Install DotNet workloads
        shell: bash
        run: |
          dotnet workload install android aspire ios tvos macos maui
          dotnet workload list
        working-directory: src
      - name: Cleanup nuget local storage
        run: |
          dotnet nuget locals all --clear
          dotnet nuget remove source "Microsoft Visual Studio Offline Packages" 2>&1 | Out-Null
        working-directory: src
        shell: pwsh
      - name: NBGV
        id: nbgv
        uses: dotnet/nbgv@master
        with:
          setAllVars: true
      - name: Install dotnet tools
        run: dotnet tool restore
        working-directory: src
      - name: Changelog
        uses: glennawatson/ChangeLog@v1
        id: changelog
      
      - name: Run Common Build Steps
        uses: ./.github/actions/dotnet-build-common
        with:
          solutionName: ${{ inputs.solutionName }}
          isPrimaryBuildOs: ${{ inputs.isPrimaryBuildOs }}
          changeCommitLog: ${{ steps.changelog.outputs.commitLog }}
          nbgvVersion: ${{ steps.nbgv.outputs.SimpleVersion }}
          sonarToken: ${{ secrets.SONAR_TOKEN }}
          sonarProjectKey: ${{ secrets.SONAR_PROJECT_KEY }}
          sonarOrganisationKey: ${{ secrets.SONAR_ORGANISATION_KEY }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          virusTotalApiKey: ${{ secrets.VIRUSTOTAL_API_KEY }}
      
      - name: Upload Code Coverage
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -s 'artifacts/unittestcoverage' -f '*.xml' -v -t '${{ env.CODECOV_TOKEN }}'
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      
      - name: store binlogs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: binlogs-linux
          path: artifacts/binlog
      - name: store unit test coverage
        if: ${{ inputs.isPrimaryBuildOs }}
        uses: actions/upload-artifact@v4
        with:
          name: unittestcoverage
          path: artifacts/unittestcoverage
          if-no-files-found: error
      - name: store integration test coverage
        if: ${{ inputs.isPrimaryBuildOs }}
        uses: actions/upload-artifact@v4
        with:
          name: inttestcoverage
          path: artifacts/inttestcoverage
      - name: store nuget packages
        if: inputs.isPrimaryBuildOs
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          path: artifacts/nuget
          if-no-files-found: error
      - name: store omd
        if: inputs.isPrimaryBuildOs
        uses: actions/upload-artifact@v4
        with:
          name: omd
          path: artifacts/omd
      - name: store sbom
        if: inputs.isPrimaryBuildOs
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: artifacts/sbom
      - name: store outdated
        if: inputs.isPrimaryBuildOs
        uses: actions/upload-artifact@v4
        with:
          name: outdated
          path: artifacts/outdated
